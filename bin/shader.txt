#version 330

in vec3 vertexPosition; 
 
in vec3 vertexNormal; 

out vec3 lightIntensity; 

uniform vec4 lightPos; // Light position in eye coords. 

//uniform vec3 Kd; // Diffuse reflectivity 

//uniform vec3 Ld; // Light source intensity 

uniform mat4 matModel;

uniform mat4 matView;

uniform mat3 matNormal; 

uniform mat4 mvp; // Projection * ModelView 

void main() {
    // Convert normal and position to eye coords 
    vec3 tnorm = normalize( matNormal * vertexNormal); 

    vec4 eyeCoords = matModel * matView * vec4(vertexPosition, 1.0); 

    vec3 s = normalize(vec3(lightPos - eyeCoords)); 

    // The diffuse shading equation 

    LightIntensity = /*Ld * Kd **/ vec3(0.5, 0.5, 0.5, 1.0) * max( dot( s, tnorm ), 0.0 ); 

    // Convert position to clip coordinates and pass along 

    gl_Position = mvp * vec4(vertexPosition,1.0); 
    
}

#version 330

in vec3 lightIntensity; 

out vec4 finalColor;

void main() {

    finalColor = vec4(lightIntensity, 1.0);

} 